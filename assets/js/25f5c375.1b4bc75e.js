"use strict";(self.webpackChunkdocs_common=self.webpackChunkdocs_common||[]).push([[7761],{1669:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"guides/docs-common/docs-creation","title":"Docs Creation","description":"Anyone working on any documentation projects, It\'s intentional to have no jira or using any of the common packages I created, because in the end its just docs, static simple content that needs no scalability. Its for quick documenting, but the important thing is to organize the docs well","source":"@site/docs/guides/docs-common/docs-creation.md","sourceDirName":"guides/docs-common","slug":"/guides/docs-common/docs-creation","permalink":"/docs-common/docs/guides/docs-common/docs-creation","draft":false,"unlisted":false,"editUrl":"https://github.com/MohammadAObed/docs-common/tree/main/docs/guides/docs-common/docs-creation.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Docs - Common","permalink":"/docs-common/docs/category/docs---common"},"next":{"title":"Docs Editing","permalink":"/docs-common/docs/guides/docs-common/docs-editing"}}');var i=o(4848),s=o(8453);const l={sidebar_position:1},d="Docs Creation",c={},r=[{value:"Create GitHub Repo",id:"create-github-repo",level:2},{value:"Installation",id:"installation",level:2},{value:"Quick Hack",id:"quick-hack",level:3},{value:"Installation Others",id:"installation-others",level:2},{value:"README.md",id:"readmemd",level:2},{value:"Adding/Modifying/Removing Files and folders after install with the template generation",id:"addingmodifyingremoving-files-and-folders-after-install-with-the-template-generation",level:2},{value:"docusaurus.config.js",id:"docusaurusconfigjs",level:3},{value:"static folder",id:"static-folder",level:3},{value:"docs folder",id:"docs-folder",level:3},{value:"blog folder",id:"blog-folder",level:3},{value:"src folder",id:"src-folder",level:3},{value:"css/custom.css",id:"csscustomcss",level:4},{value:"components/HomepageFeatures/index.tsx",id:"componentshomepagefeaturesindextsx",level:4},{value:"components/HomepageFeatures/style.module.css",id:"componentshomepagefeaturesstylemodulecss",level:4},{value:"pages folder",id:"pages-folder",level:4},{value:"Generate Code Documentation",id:"generate-code-documentation",level:2}];function a(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"docs-creation",children:"Docs Creation"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Anyone working on any documentation projects, It's intentional to have no jira or using any of the common packages I created, because in the end its just docs, static simple content that needs no scalability. Its for quick documenting, but the important thing is to organize the docs well"})}),"\n",(0,i.jsx)(n.h2,{id:"create-github-repo",children:"Create GitHub Repo"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Follow the ",(0,i.jsx)(n.a,{href:"/docs-common/docs/guides/project-creation-common#clone-the-repository-in-vs-code-using-git-bash",children:"clone repo step"})," & ",(0,i.jsx)(n.a,{href:"/docs-common/docs/guides/project-creation-common#connect-your-github-repository",children:"connect repo"})]}),"\n",(0,i.jsxs)(n.li,{children:["But when cloning the repo, name the folder: ",(0,i.jsx)(n.code,{children:"docs"}),", and you should clone the repo inside the project folder you are writing the documentation for"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"Cloning the repo inside the project you are writing the documentation for has many advantages:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Having the docs in your project folder is easier to work with"}),"\n",(0,i.jsxs)(n.li,{children:["So you can generate ",(0,i.jsx)(n.a,{href:"#generate-code-documentation",children:"code documentation"})," with no effort"]}),"\n"]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Just make sure you use the ",(0,i.jsx)(n.a,{href:"https://mo-docs-config.netlify.app",children:"config package"})," or:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["have ",(0,i.jsx)(n.code,{children:'"exclude": ["docs"]'})," in your tsconfig"]}),"\n",(0,i.jsxs)(n.li,{children:["have ",(0,i.jsx)(n.code,{children:'ignores: ["docs", "docs/**"],'})," in your eslint.config"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["Follow the installation instructions only in the official ",(0,i.jsx)(n.a,{href:"https://docusaurus.io/docs/installation",children:"docusaurus"})," docs"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Make sure to select the create command with typescript"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"quick-hack",children:"Quick Hack"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stage the changes of your project after you installed and a template has been generated."}),"\n",(0,i.jsxs)(n.li,{children:["Then follow the steps below of installation & copying and pasting.","\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\ud83d\udca1 Before copying code, save the file you will paste into first, so Prettier does its thing and Git changes look clearer."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Then check whats different and keep the changes, just double check for any unintended changes like changing the names, copying files of the docs, changing the package-lock etc..."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation-others",children:"Installation Others"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Install an ",(0,i.jsx)(n.a,{href:"https://docusaurus.io/community/resources#search",children:"npm package"})," for search within docs functionality, One package that works and offline: ",(0,i.jsx)(n.code,{children:"npm install --save @easyops-cn/docusaurus-search-local"})]}),"\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.a,{href:"https://typedoc-plugin-markdown.org/plugins/docusaurus/quick-start",children:"docusaurus-plugin-typedoc"})," for generating documentation about the app source code: ",(0,i.jsx)(n.code,{children:"npm install typedoc typedoc-plugin-markdown docusaurus-plugin-typedoc --save-dev"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"readmemd",children:"README.md"}),"\n",(0,i.jsxs)(n.p,{children:["Add to ",(0,i.jsx)(n.code,{children:"README.md"})," this content below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-md",children:"# <repo-name>\n\nConfig and setup for the documentation site built with [Docusaurus](https://docusaurus.io).\n\n## \ud83d\udcd6 Docs\n\nSee the full [documentation](https://<your-username>.github.io/<your-repo-name>/)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"addingmodifyingremoving-files-and-folders-after-install-with-the-template-generation",children:"Adding/Modifying/Removing Files and folders after install with the template generation"}),"\n",(0,i.jsx)(n.h3,{id:"docusaurusconfigjs",children:"docusaurus.config.js"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Remove all comments inside this folder!"}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"+"})," = Add, ",(0,i.jsx)(n.code,{children:"-"})," = Remove, ",(0,i.jsx)(n.code,{children:"~"})," = Modify, lines without prefix = Keep/Modify context"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'+ import type { PluginOptions } from "@easyops-cn/docusaurus-search-local";\n\n+ const ORG = "MohammadAObed"; //github org/user name\n+ const REPO = "docs-common"; //github repo name\n+ const SITE_URL = `https://${ORG}.github.io`; //Site that will host the docs\n+ const GITHUB_URL = `https://github.com/${ORG}/config`;\n\nconst config: Config = {\n  ~ title: REPO,\n  ~ tagline: "Text that will appear at the front page",\n  ~ url: SITE_URL,\n  ~ organizationName: ORG,\n  ~ projectName: REPO,\n\n  presets: [\n    [\n      {\n        docs: {\n          ~ editUrl: `https://github.com/${ORG}/${REPO}/tree/main/`,\n        },\n        blog: {\n          ~ editUrl: `https://github.com/${ORG}/${REPO}/tree/main/`,\n        },\n      } satisfies Preset.Options,\n    ],\n  ],\n\n  themeConfig: {\n    ~ image: "img/social-card.png",\n    navbar: {\n      ~ title: REPO,\n      logo: {\n        ~ alt: `${REPO} logo`,\n        ~ src: "img/logo.png",\n      },\n      ~ items: [\n        //Delete all existing items, and add the following\n        + { type: "docSidebar", sidebarId: "tutorialSidebar", position: "left", label: "Docs" },\n        + { href: GITHUB_URL, label: "GitHub", position: "right" },\n      ],\n    },\n    footer: {\n      style: "dark",\n      ~ links: [\n        //Delete all existing links, and add the following\n        + {\n          title: "docs",\n          items: [{ label: "Getting Started", to: "/docs/get-started" }],\n        },\n        + {\n          title: "More",\n          items: [\n            { label: "Blog", to: "/blog" },\n            { label: "GitHub", href: GITHUB_URL },\n          ],\n        },\n      ],\n      ~ copyright: `\xa9 ${new Date().getFullYear()} OPMO, Inc. Built with Docusaurus.`, //replace My Project with your project name or whatever\n    },\n    + colorMode: {\n      defaultMode: "dark",\n    },\n  } satisfies Preset.ThemeConfig,\n  + themes: [\n    [\n      require.resolve("@easyops-cn/docusaurus-search-local"),\n      {\n        hashed: true,\n      } satisfies PluginOptions,\n    ],\n  ],\n  + plugins: [\n    [\n      "docusaurus-plugin-typedoc",\n      {\n        entryPoints: ["../src", /* ../any-file-not-under-src.ts, .... */],\n        entryPointStrategy: "expand",\n        tsconfig: "../tsconfig.json",\n        plugin: ["typedoc-plugin-markdown"],\n        out: "docs/app",\n        cleanOutputDir: false,\n        excludeExternals: true,\n        excludePrivate: true,\n        excludeProtected: true,\n        readme: "none",\n        exclude: ["../docs/**"],\n      },\n    ],\n  ],\n};\n'})}),"\n",(0,i.jsx)(n.h3,{id:"static-folder",children:"static folder"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Remove all files inside it"}),"\n",(0,i.jsxs)(n.li,{children:["Add your own files:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"logo.png"})," - your project logo"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"social-card.png"})," - the image that will appear when you share the site link on social media"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"favicon.ico"})," - the icon that will appear in the browser tab"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83d\udca1 You can use ",(0,i.jsx)(n.a,{href:"https://favicon.io/favicon-generator/",children:"favicon.io"})," to generate all files above"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"docs-folder",children:"docs folder"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Remove all files inside it"}),"\n",(0,i.jsxs)(n.li,{children:["Add your own files, at least one is required for the docs to appear:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"get-started.md"})," - a sample, e.g.:"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-md",children:"---\nsidebar_position: 1\n---\n\n# Get Started\n"})}),"\n",(0,i.jsx)(n.h3,{id:"blog-folder",children:"blog folder"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Remove all files inside it"}),"\n",(0,i.jsxs)(n.li,{children:["Add your own files:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"yyyy-mm-dd-personal-notes.mdx"})," - a sample, e.g.:"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:"---\nslug: personal-notes\ntitle: Personal Notes\nauthors: [obed]\ntags: [notes]\n---\n\nNotes that might not fit anywhere else.\n\n{/* truncate */}\n\nHere are my personal notes:\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"authors.yml"})," - add your own authors - e.g.:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:"obed:\n  name: Mohammad Obed\n  title: Coder\n  url: https://www.linkedin.com/in/mohammad-obed\n  image_url: https://github.com/MohammadAObed.png\n  page: true\n  socials:\n    linkedin: mohammad-obed\n    github: MohammadAObed\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tags.yml"})," - add your own tags, - e.g.:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:"notes:\n  label: Notes\n  permalink: /notes\n  description: any in-direct notes to the standard way of docs\n"})}),"\n",(0,i.jsx)(n.h3,{id:"src-folder",children:"src folder"}),"\n",(0,i.jsx)(n.h4,{id:"csscustomcss",children:"css/custom.css"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Add the following content:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".top-divider {\n  border-top: 1px solid var(--ifm-color-emphasis-200);\n  margin-top: 10px;\n  padding-top: 10px;\n}\n\n.bottom-divider {\n  border-bottom: 1px solid var(--ifm-color-emphasis-200);\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n}\n\n.bottom-placed-1 {\n  position: absolute;\n  bottom: 12px;\n  width: 94%;\n}\n\n.bottom-placed-2 {\n  position: absolute;\n  bottom: 52px;\n  width: 94%;\n}\n\n.bottom-placed-3 {\n  position: absolute;\n  bottom: 92px;\n  width: 94%;\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"componentshomepagefeaturesindextsx",children:"components/HomepageFeatures/index.tsx"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Replace the content of the file with the following:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import Heading from "@theme/Heading";\nimport type { ReactNode } from "react";\nimport styles from "./styles.module.css";\n\ntype FeatureItem = {\n  title: string;\n  description: ReactNode;\n};\n\nconst FeatureList: FeatureItem[] = [\n  {\n    title: "Card 1",\n    description: (\n      <>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</>\n    ),\n  },\n  {\n    title: "Card 2",\n    description: (\n      <>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</>\n    ),\n  },\n  {\n    title: "Card 3",\n    description: (\n      <>lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</>\n    ),\n  },\n];\n\nfunction Feature({ title, description }: FeatureItem) {\n  return (\n    <div className={styles.mx400}>\n      <div className="text--center padding-horiz--md">\n        <Heading as="h3">{title}</Heading>\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default function HomepageFeatures(): ReactNode {\n  return (\n    <section className={styles.features}>\n      <div className={styles.feature}>\n        {FeatureList.map((props, idx) => (\n          <Feature key={idx} {...props} />\n        ))}\n      </div>\n    </section>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"componentshomepagefeaturesstylemodulecss",children:"components/HomepageFeatures/style.module.css"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Replace the content of the file with the following:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"main {\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n}\n\n.features {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  flex-wrap: wrap;\n}\n\n.feature {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  flex-wrap: wrap;\n}\n\n.featureHidden {\n  height: 50px;\n  width: 200px;\n}\n\n.mx400 {\n  max-width: 400px;\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"pages-folder",children:"pages folder"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Remove ",(0,i.jsx)(n.code,{children:"markdown-page.md"})," file"]}),"\n",(0,i.jsxs)(n.li,{children:["Modify ",(0,i.jsx)(n.code,{children:"index.tsx"})," file content with the following:"]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"+"})," = Add, ",(0,i.jsx)(n.code,{children:"-"})," = Remove, ",(0,i.jsx)(n.code,{children:"~"})," = Modify, lines without prefix = Keep/Modify context"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'- <Link className="button button--secondary button--lg" to="/docs/intro">\n-   Docusaurus Tutorial - 5min \u23f1\ufe0f\n- </Link>\n\n+ <Link className="button button--secondary button--lg" to="/docs/get-started">\n+     Get Started\n+ </Link>\n\n~ <Layout title={siteConfig.title} description={siteConfig.tagline}>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"generate-code-documentation",children:"Generate Code Documentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.a,{href:"#installation-others",children:"docusaurus-plugin-typedoc"})]}),"\n",(0,i.jsxs)(n.li,{children:["Add the plugin in plugins array in ",(0,i.jsx)(n.a,{href:"#docusaurusconfigjs",children:"docusaurus.config.js"})]}),"\n",(0,i.jsxs)(n.li,{children:["Now on npm start, it will generate docs in the folder based on out property value, current: ",(0,i.jsx)(n.code,{children:"app/docs"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>d});var t=o(6540);const i={},s=t.createContext(i);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);