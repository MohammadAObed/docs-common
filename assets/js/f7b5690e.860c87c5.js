"use strict";(self.webpackChunkdocs_common=self.webpackChunkdocs_common||[]).push([[7127],{4894:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"guides/docs-common/docs-publishing","title":"Docs Publishing","description":"Follow these steps to get consistent builds, ship to GitHub Pages, and keep your docs live after every commit.","source":"@site/docs/guides/docs-common/docs-publishing.md","sourceDirName":"guides/docs-common","slug":"/guides/docs-common/docs-publishing","permalink":"/docs-common/docs/guides/docs-common/docs-publishing","draft":false,"unlisted":false,"editUrl":"https://github.com/MohammadAObed/docs-common/tree/main/docs/guides/docs-common/docs-publishing.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Docs Editing","permalink":"/docs-common/docs/guides/docs-common/docs-editing"},"next":{"title":"Docs vs Code Comments","permalink":"/docs-common/docs/guides/docs-common/docs-and-commenting-rules"}}');var i=s(4848),t=s(8453);const c={sidebar_position:4},r="Docs Publishing",l={},d=[{value:"1. Use Yarn",id:"1-use-yarn",level:2},{value:"2. Make sure the config is ready",id:"2-make-sure-the-config-is-ready",level:2},{value:"3. Create workflows: <code>deploy.yml</code>",id:"3-create-workflows-deployyml",level:2},{value:"4. Build the project locally",id:"4-build-the-project-locally",level:2},{value:"5. Commit &amp; Push Changes",id:"5-commit--push-changes",level:2},{value:"6. Change GitHub Repo Settings",id:"6-change-github-repo-settings",level:2},{value:"7. Access Your Website",id:"7-access-your-website",level:2},{value:"8. All Done",id:"8-all-done",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"docs-publishing",children:"Docs Publishing"})}),"\n",(0,i.jsx)(n.p,{children:"Follow these steps to get consistent builds, ship to GitHub Pages, and keep your docs live after every commit."}),"\n",(0,i.jsx)(n.h2,{id:"1-use-yarn",children:"1. Use Yarn"}),"\n",(0,i.jsxs)(n.p,{children:["Delete ",(0,i.jsx)(n.code,{children:"package-lock.json"})," and execute ",(0,i.jsx)(n.code,{children:"yarn install"})," so you generate a ",(0,i.jsx)(n.code,{children:"yarn.lock"})," file if you dont have it already. You use ",(0,i.jsx)(n.code,{children:"yarn"})," commands instead of ",(0,i.jsx)(n.code,{children:"npm"})," from now on"]}),"\n",(0,i.jsx)(n.h2,{id:"2-make-sure-the-config-is-ready",children:"2. Make sure the config is ready"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Make sure you added thing correctly in ",(0,i.jsx)(n.a,{href:"/docs-common/docs/guides/docs-common/docs-creation#addingmodifyingremoving-files-and-folders-after-install-with-the-template-generation",children:"docusaurus.config.ts"})]}),"\n",(0,i.jsxs)(n.li,{children:["Update ",(0,i.jsx)(n.code,{children:"docs/docusaurus.config.ts"})," so the deploy command knows where to publish."]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"+"})," = Add, ",(0,i.jsx)(n.code,{children:"-"})," = Remove, ",(0,i.jsx)(n.code,{children:"~"})," = Modify, lines without prefix = Keep/Modify context"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="docusaurus.config.ts"',children:'const config: Config = {\n  // ...\n  ~ url: SITE_URL,\n  + baseUrl: `/${REPO}/`,\n  + deploymentBranch: "gh-pages",\n  // ...\n};\n'})}),"\n",(0,i.jsxs)(n.h2,{id:"3-create-workflows-deployyml",children:["3. Create workflows: ",(0,i.jsx)(n.code,{children:"deploy.yml"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["At root of your project","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Create ",(0,i.jsx)(n.code,{children:".github"})," folder"]}),"\n",(0,i.jsxs)(n.li,{children:["Inside it create ",(0,i.jsx)(n.code,{children:"workflows"})," folder"]}),"\n",(0,i.jsxs)(n.li,{children:["Inside it create ",(0,i.jsx)(n.code,{children:"deploy.yml"})," folder"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Add these contents to the ",(0,i.jsx)(n.code,{children:"deploy.yml"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",metastring:'title="deploy.yml"',children:"name: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - main\n    # Review gh actions docs if you want to further define triggers, paths, etc\n    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\n\npermissions:\n  contents: write\n\njobs:\n  deploy:\n    name: Deploy to GitHub Pages\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n      - uses: actions/setup-node@v4\n        with:\n          node-version: 22 # Update this version if you have a higher one\n          cache: yarn\n\n      - name: Install dependencies\n        run: yarn install --frozen-lockfile\n      - name: Build website\n        run: yarn build\n\n      # Popular action to deploy to GitHub Pages:\n      # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          # Build output to publish to the `gh-pages` branch:\n          publish_dir: ./build\n          # The following lines assign commit authorship to the official\n          # GH-Actions bot for deploys to `gh-pages` branch:\n          # https://github.com/actions/checkout/issues/13#issuecomment-724415212\n          # The GH actions bot is used by default if you didn't specify the two fields.\n          # You can swap them out with your own user credentials.\n          user_name: github-actions[bot]\n          user_email: 41898282+github-actions[bot]@users.noreply.github.com\n"})}),"\n",(0,i.jsx)(n.h2,{id:"4-build-the-project-locally",children:"4. Build the project locally"}),"\n",(0,i.jsxs)(n.p,{children:["To test the project before publishing, execute ",(0,i.jsx)(n.code,{children:"yarn build"})," which will build the project and show any errors if any, so yuo dont wait for github pages to show errors or not figuring out why the deploy not working"]}),"\n",(0,i.jsx)(n.h2,{id:"5-commit--push-changes",children:"5. Commit & Push Changes"}),"\n",(0,i.jsx)(n.p,{children:"In your code editor commit & push changes you made from the previous steps, the next step depends on it."}),"\n",(0,i.jsx)(n.h2,{id:"6-change-github-repo-settings",children:"6. Change GitHub Repo Settings"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Go into browser into your repo here: ",(0,i.jsx)(n.code,{children:"https://<your-username>/<your-repo-name>/"})]}),"\n",(0,i.jsx)(n.li,{children:"Go to Settings \u2192 Pages."}),"\n",(0,i.jsx)(n.li,{children:"Under Build and deployment, choose:"}),"\n",(0,i.jsx)(n.li,{children:"Source: Deploy from a branch"}),"\n",(0,i.jsxs)(n.li,{children:["Branch: ",(0,i.jsx)(n.code,{children:"gh-pages"}),", Folder /","\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83d\udca1 If ",(0,i.jsx)(n.code,{children:"gh-pages"})," is not showing, just wait 1 to 2 minutes then refresh the page. The option should appear once you done the ",(0,i.jsx)(n.a,{href:"#5-commit--push-changes",children:"previous steps git push"}),", and after the action processing is done (Check the action under page ",(0,i.jsx)(n.code,{children:"Actions"})," tab)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Save changes."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"7-access-your-website",children:"7. Access Your Website"}),"\n",(0,i.jsxs)(n.p,{children:["Once the workflow runs successfully, your docs will be live at: ",(0,i.jsx)(n.code,{children:"https://<your-username>.github.io/<your-repo-name>/"})]}),"\n",(0,i.jsx)(n.p,{children:"How to check for workflow:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Go into browser into your repo here: ",(0,i.jsx)(n.code,{children:"https://<your-username>/<your-repo-name>/"})]}),"\n",(0,i.jsx)(n.li,{children:"Go to Actions"}),"\n",(0,i.jsxs)(n.li,{children:["You can see a workflow being processed, and the branch should be ",(0,i.jsx)(n.code,{children:"main"}),", after its finished a new workflow will occur with branch ",(0,i.jsx)(n.code,{children:"gh-pages"}),", after its successful you can view your website, just wait a minute after all workflows are done to see changes in the docs site"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"8-all-done",children:"8. All Done"}),"\n",(0,i.jsxs)(n.p,{children:["Now every time you push changes, the site will be updated automatically most of the time (if the content of the site actually has changed), this happens because of ",(0,i.jsx)(n.code,{children:"deploy.yml"}),", it uses another branch ",(0,i.jsx)(n.code,{children:"gh-pages"})," (we didn't create it, its created automatically), and force commit changes from ",(0,i.jsx)(n.code,{children:"main"})," branch"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var o=s(6540);const i={},t=o.createContext(i);function c(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);